var db = require('controllers/database');
var mongoose = require('mongoose');
var clients = mongoose.model('clients');
var method	= require('../../route/methods');
var crypto = require('crypto');
var rand = require('csprng');

exports.login = function(email,password,callback){
  clients.find({email: email},function(err,data){
    if(data.length != 0){
      var token = data[0]._id;
      var fname = data[0].fname;
      var hash_db = data[0].password;
      var temp = data[0].salt;
      var connected = data[0].connected;
      var account = data[0].account;
      var hashed_password = crypto.createHash('sha512').update(temp + password).digest("hex");
      if(hash_db == hashed_password){
        if(!connected){
          if(account){
            var keyVitual = method.keyVirtual();
            var key = method.key(keyVitual);
            clients.update({_id:token},{$set:{connected:true}},{multi:true},function(err){
              if(err){
                callback({'res':false,'response':"Error Clients, you have not connected this user."});
              }else{
                callback({'res':true,'response':"Successfully Clients, login.",'key':keyVitual,
                  'token':token,'fname':fname,});
              }
            });
          }else{
            callback({'res':false,'response':"Error Clients, your account is disabled."});
          }
        }else{
          callback({'res':false,'response':"Error Clients, the user is logged into another device."});
        }
      }else{
        callback({'res':false,'response':"Error Clients, invalid password."});
      }
    }else{
      callback({'res':false,'response':"Error Clients, user not exist."});
    }
  });
}

exports.profile = function(token,callback){
  clients.find({_id:token},function(err,data){
    if(data.length != 0){
      var fname = data[0].fname;
      var lname = data[0].lname;
      var gender = data[0].gender;
      var dateN = data[0].dateN;
      var country = data[0].country;
      var city = data[0].city;
      var email = data[0].email;
      var phone = data[0].phone;
      var picture = data[0].picture;
      var keyVitual = method.keyVirtual();
      var key = method.key(keyVitual);
      callback({'res':true,'key':keyVitual,'fname':method.encode(fname,key),'lname':method.encode(lname,key),
        'gender':method.encode(gender,key),'dateN':method.encode(dateN,key),'country':method.encode(country,key),
        'city':method.encode(city,key),'email':method.encode(email,key),'phone':method.encode(phone,key),
        'picture':picture});
    }else{
      callback({'res':false});
    }
  });
}

exports.logout = function(token,callback){
  clients.update({_id:token},{$set:{connected:false}},{multi:true},function(err){
    if(err){
      callback({'res':false});
    }else{
      callback({'res':true});
    }
  });
}

exports.signup = function(fname,email,password,callback){
  var temp = rand(160,36);
  var hashed_password = crypto.createHash('sha512').update(temp + password).digest("hex");
  var newUser = new clients({fname:fname,email:email,
    password:hashed_password,connected:false,account:true,salt:temp });
  clients.find({email: email},function(err,data){
    if(data.length == 0){
      newUser.save(function(err){
          if(err){
            callback({'res':false,'response':"Error Client, you have not added a new user."});
          }else{
            callback({'res':true,'response':"Successfully Client, you have added a new user."});
          }
        });
    }else{
      callback({'res':false,'response':"Error Client, Email already registered."});
    }
  });
}

exports.disableAccount = function(token,callback){
  clients.update({_id:token},{$set:{connected:false,account:false}},{multi:true},function(err){
    if(err){
      callback({'res':false});
    }else{
      callback({'res':true});
    }
  });
}

exports.disableAccountAdmin = function(token,callback){
  clients.find({_id: token},function(err,data){
    if(data.length != 0){
      var account = data[0].account;
      if(account){
        clients.update({_id:token},{$set:{connected:false,account:false}},{multi:true},function(err){
          if(err){
            callback({'res':false});
          }else{
            callback({'res':true,'response':"Successfully Driver, you have disable account."});
          }
        });
      }else{
        clients.update({_id:token},{$set:{connected:false,account:true}},{multi:true},function(err){
          if(err){
            callback({'res':false});
          }else{
            callback({'res':true,'response':"Successfully Driver, you have activate account."});
          }
        });
      }
    }
  });
}

exports.getAllClients = function(callback){
  clients.find({},{_id:1,fname:1,lname:1,city:1,dateN:1},function(err,doc){
		if (doc.length != 0) {
      callback({'res':true,'data':doc});
    } else {
      callback({'res':false});
    }
  });
}

exports.editAge = function(token,date,callback){
  clients.update({_id:token},{$set:{dateN:date}},{multi:true},function(err){
    if(err){
      callback({'res':false});
    }else{
      callback({'res':true});
    }
  });
}

exports.editPhone = function(token,phone,callback){
  clients.update({_id:token},{$set:{phone:phone}},{multi:true},function(err){
    if(err){
      callback({'res':false});
    }else{
      callback({'res':true});
    }
  });
}