var mongoose = require('mongoose');
var url = 'mongodb://localhost:27017/taxiproject';
//var dbURI = 'mongodb://uur8c9ua1qzn3il:IXPgIlLwd1dea48juI7q@buy3i4hp4znn7sw-mongodb.services.clever-cloud.com:27017/buy3i4hp4znn7sw';
mongoose.connect(url);

var markSchema = new mongoose.Schema({
	name:String
});

var countrySchema = new mongoose.Schema({
	name:String,
	city:{
		name:String
	}
});

var adminSchema = new mongoose.Schema({
	username:String,
	password:String
});

var clientSchema = new mongoose.Schema({
	fname:String,

	email:String,
	password:String,

	salt:String,
	connected:Boolean,
	account:Boolean
});

var driverSchema = new mongoose.Schema({
	fname:String,
	lname:String,
	gender:String,
	dateN:String,
  	country:String,
  	city:String,
	email:String,
	password:String,
	phone:String,
	pt:{type:Number,min: 0 },
	ptt:{type:Number,min: 0 },
	picture:String,
	salt:String,
	connected:Boolean,
	life:Number,
	account:Boolean,
	taxis:[{
		idTaxi:String,
		model:String,
		serial:String,
		places:Number,
		luggages:Number,
		date:String,
		working:Boolean
	}]
});

var reclamationSchema = new mongoose.Schema({
	token:String,
	username:String,
	subject:String,
	date:String,
	status:Boolean,
	me:Boolean,
	messages:[{
		sender:Boolean,
		message:String,
		date:String
	}]
});

var serviceSchema = new mongoose.Schema({
	name:String,
	value:{type:Number,min: 1, max: 5 }
});

var bookSchema = new mongoose.Schema({
	date:String,
	value:{type:Number,min: 1, max: 20 },
	tokenDriver:String,
	nameDriver:String,
	tokenClient:String,
	nameClient:String,
	originLatitude:Number,
	originLongitude:Number,
	desLatitude:Number,
	desLongitude:Number,
	pcourse:Number,
	ptake:Number,
	preturn:Number
});

var advanceSchema = new mongoose.Schema({
	token:String,
	username:String,
	latitude:String,
	longitude:String,
	dateBook:String,
	description:String,
	status:Boolean,
	repeat:Boolean,
	date:String,
	tokenDriver:String,
	nameDriver:String,
	
});

var taxicabSchema = new mongoose.Schema({
	mark:String,
	model:String,
	serial:String,
	places:Number,
	luggages:Number,
	date:String,
	pub:String,
	dateExp:String
});

var pubSchema = new mongoose.Schema({
	name:String,
	category:String,
	period:String,
	price:String,
	type:String,
	date:String
});

var marks = module.exports = mongoose.model('marks', markSchema);
var countrys = module.exports = mongoose.model('countrys', countrySchema);
var admins = module.exports = mongoose.model('admins', adminSchema);
var clients = module.exports = mongoose.model('clients', clientSchema);
var drivers = module.exports = mongoose.model('drivers', driverSchema);
var reclamations = module.exports = mongoose.model('reclamations', reclamationSchema);
var services = module.exports = mongoose.model('services', serviceSchema);
var books = module.exports = mongoose.model('books', bookSchema);
var advances = module.exports = mongoose.model('advances', advanceSchema);
var taxicabs = module.exports = mongoose.model('taxicabs', taxicabSchema);
var pubs = module.exports = mongoose.model('pubs', pubSchema);
